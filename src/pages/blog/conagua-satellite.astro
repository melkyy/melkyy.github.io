---
import Layout from '../../layouts/BlogLayout.astro';
import aaronImage from '/public/aaron-blog.jpg';
import mexicoSatellite from '/public/conagua/satellite.jpg';
import conaguawebsite from '/public/conagua/website.png';
import animationGift from '/public/conagua/Animation.gif';
import Exanple from '/public/conagua/example.png';
import folder from '/public/conagua/folder.png';
import code1 from '/public/conagua/code1.png';
import code2 from '/public/conagua/code2.png';
import code3 from '/public/conagua/code3.png';
import code4 from '/public/conagua/code4.png';
---

<Layout>
	<header class="not-format mb-4 text-black dark:text-white lg:mb-6">
		<address class="mb-6 flex items-center not-italic">
			<div class="text-gray-900 mr-3 inline-flex items-center text-sm dark:text-white">
				<img class="mr-4 h-16 w-16 rounded-full" src={aaronImage.src} alt="Jese Leos" />
				<div>
					<a
						href="https://www.linkedin.com/in/aaron-melquisedek-rodriguez-ortiz-858704119/"
						target="_blank"
						rel="author"
						class="text-xl font-bold">Aaron Rodriguez</a
					>
					<p>Software Engineer</p>
					<p class="text-gray-500 dark:text-gray-400 text-black">
						<time datetime="2022-02-08" title="February 8th, 2022">Jul. 07, 2024</time>
					</p>
				</div>
			</div>
		</address>
		<h1 class="text-gray-900 mb-4 text-3xl font-extrabold leading-tight lg:mb-6 lg:text-4xl">
			Check Mexico’s Rain Forecasts Using Satellite Maps on Chrome
		</h1>
	</header>
	<article class="warp text-black dark:text-white">
		<img src={mexicoSatellite.src} class="mb-20" />
		<h1 class="text-gray-900 mb-4 text-3xl font-extrabold leading-tight lg:mb-6 lg:text-4xl">
			Motivation
		</h1>
		<p class="mb-10">
			When I was a kid, I lived in a place with many hurricanes. To keep track of the next
			hurricane, we used a website that showed current satellite images and forecasts. The website,
			named Conagua, a government commission managing all weather-related information. at present I
			recalled this resource recently because I was curious about when it would rain since my town
			is always drought and hot as hell.
		</p>
		<p class="mb-10">So, I thought about to create a google extension for that.</p>
		<h1 class="text-gray-900 mb-4 text-3xl font-extrabold leading-tight lg:mb-6 lg:text-4xl">
			Tools
		</h1>
		<ul class="mb-10">
			<li>-A computer lol.</li>
		</ul>
		<h1 class="text-gray-900 mb-4 text-3xl font-extrabold leading-tight lg:mb-6 lg:text-4xl">
			How I did it
		</h1>
		<p class="mb-10">
			My first task is to find the weather in Mexico. I checked Google for ways to display satellite
			images. Many websites offer free APIs, but they are limited by the number of API calls. For
			example, if I retrieve the weather 100 times, the API will block the next call until a certain
			time. If I want to make an unlimited number of calls, I have to pay for it, which I am not
			looking to do.
		</p>
		<p class="mb-10">
			The CONAGUA website does not have an API, but we will use the power of ✨Dev Tools✨ to find a
			solution
		</p>
		<img src={conaguawebsite.src} class="mb-20" />
		<p class="mb-10">
			The CONAGUA website offers many options for viewing the weather, so I chose the satellite
			images because it's easier to see what's happening in Mexico.
		</p>
		<p class="mb-10">When I inspected the satellite images, I found something interesting.</p>
		<img src={animationGift.src} class="mb-20" />
		<p class="mb-5">
			They are using an url for show several images, something like that
			("https://smn.conagua.gob.mx/MEDIA")
		</p>
		<p class="mb-10">
			The 'li' tag is generating a range of dates within the 'fecha' attribute as numbers like
			'202408050400', which represent the current date. Additionally, there is a function that
			handles the URL of the image, displaying one image at a time every second, creating an
			animation-like effect
		</p>
		<p class="mb-5">
			So let's identify the date:<br />
			<code> "202408050400" - 2024 = year, 08 = month, 05 = day, 0400 = time </code>
		</p>
		<p class="mb-10">
			By identifying the number generation
			<strong> I can use the URL and insert the numbers to display the image anywhere. </strong>
		</p>
		<p class="mb-10">
			By joining the URL with the number and adding '.jpg' at the end, we get something like this: <br
			/>
			"smn.conagua.gob.mx/MEDIA/202408051440.jpg"
		</p>
		<p class="mb-10">
			I tested the URL, and it works fine, but after a couple of minutes, the URL expires. I figured
			out that the server only stores a few images with the current date and deletes the old images
			after that, I drew a diagram to show how it works.
		</p>
		<img src={Exanple.src} class="mb-20" />
		<h1 class="text-gray-900 mb-4 text-3xl font-extrabold leading-tight lg:mb-6 lg:text-4xl">
			Making the google extension
		</h1>
		<p class="text-blue mb-10">
			Now It is time to create the extension, I followed <a
				class="font-extrabold leading-tight underline underline-offset-2"
				href="https://developer.chrome.com/docs/extensions/get-started/tutorial/hello-world"
				target="_blank">this tutorial</a
			>
			It is the Google extension documentation, and it describes how to create the first extension. Since
			we will only be showing the satellite images, it will be enough.
		</p>
		<p class="text-blue mb-10">I created the files needed and my folder structure is this:</p>
		<img src={folder.src} class="mb-20" />
		<p class="text-blue mb-10">
			Let's check what every file does:
			<br />
			<strong>-cloud.png:</strong> The extension icon.
			<br />
			<strong>-extension.js:</strong> This where will put our code for get the images and add an animation.
			<br />
			<strong>-popup.css:</strong> The extension Style.
			<br />
			<strong>-popup.html:</strong> The extension skeleton.
			<br />
			<strong>-extension.js:</strong> The extension configuration.
			<br />
		</p>
		<p class="text-blue mb-10">
			I'm only going to explain the code since it's a small extension and contains the main feature.
			So, let's get going!
		</p>
		<p class="text-blue mb-20">
			The code containts three steps: Begin, Load Images, Run Animation.
		</p>
		<img src={code1.src} class="mb-5" />
		<p class="text-blue mb-20">
			The first image shows the code for the 'begin' step. It includes a variable named CONAGUA_URL
			which contains a URL we will use to get the images. Additionally, there is an event that is
			triggered when the Google Chrome extension is opened, executing the functions that I will
			explain.
		</p>
		<img src={code2.src} class="mb-5" />
		<p class="text-blue mb-20">
			There are two functions `pad2()` and `getImageUrl()` we will focus in the second function as
			pad2 it just a helper. `getImageUrl` is a function that converts the current date in a format
			that can be appened to the conagua url. It will return an array of numbers.
		</p>
		<img src={code3.src} class="mb-5" />
		<p class="text-blue mb-5">
			The next functions are `imageLoaded()` and `loadImages()`. The imageLoaded function uses the
			variable imagesLoaded to count the number of images loaded. It checks if this variable has
			reached 9, representing all the images. If the condition is true, the loader is hidden and the
			images are shown.And lastly the `loadImages()` function that uses the array of numbers
			representing dates and we create a image HTML element for every image, we set the syle and
			adding the url appending the date that previously generated.
		</p>
		<p class="text-blue mb-20">
			Lastly, the `loadImages()` function uses an array of numbers representing dates. For each
			date, we create an image HTML element, set its style, and append the URL with the previously
			generated date. Additionally we add an event to count the images that are loaded.
		</p>
		<img src={code4.src} class="mb-5" />
		<p class="text-blue mb-20">
			Finally, the runAnimation() function is used to hide the current image and show the next image
			every half-second to create an animated effect.
		</p>
		<p class="text-blue mb-20">
			Now, save the folder and open Google Chrome or Edge. Go to the extension options, enable
			Developer Mode, and load the folder with your project. Then, check to see if it works
		</p>
		
	</article>
</Layout>
